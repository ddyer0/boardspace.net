package arimaa;

import lib.G;
import lib.OStack;
import lib.CellId;
import online.game.Play2Constants;
import online.game.BaseBoard.BoardState;

public interface ArimaaConstants extends Play2Constants
{	static final int DEFAULT_COLUMNS = 8;	// 8x6 board
	static final int DEFAULT_ROWS = 8;
	static final double VALUE_OF_WIN = 10000.0;		// a fairly arbitrary number
	static final double VALUE_OF_RABBIT = 10.0;			// the "rabbit standard" is the basis for lots of other arbitrary numbers
	
	static final String Arimaa_Init = "arimaa";	//init for standard game
	static final int NUMBER_OF_PIECES  = 16;
	static final int STEPS_PER_TURN = 4;
    //	these next must be unique integers in the dictionary
	
	static final String PlaceRabbits = "Place the Rabbits";
	static final String ArimaaGoal = "Move a Rabbit to the last row";
	static final String MoveStep = "Move a piece, step #1";
	static final String PushStep = "Complete the push, step #1";
	static final String PullStep = "Complete the pull, step #1";
	static final String PlaceState = "Place all your pieces in your two home rows";
	static final String CompleteState = "Complete a push or pull, step #1";


	enum ArimaaId implements CellId 
	{
    	Black_Chip_Pool("B"), // positive numbers are trackable
    	White_Chip_Pool("W"),
    	BoardLocation(null),
    	ReverseViewButton(null),
    	HitPlaceRabbitsButton(null),
    	;
    	String shortName = name();
    	public String shortName() { return(shortName); }
    	ArimaaId(String sn) { if(sn!=null) { shortName = sn; }}
    	static public ArimaaId find(String s)
    	{	for(ArimaaId v : values()) { if(s.equalsIgnoreCase(v.shortName)) { return(v); }}
    		return(null);
    	}
    	static public ArimaaId get(String s)
    	{	ArimaaId v = find(s);
    		G.Assert(v!=null,IdNotFoundError,s);
    		return(v);
    	}

	}
	static final int White_Chip_Index = 0;
	static final int Black_Chip_Index = 1;
	ArimaaId RackLocation[] = { ArimaaId.White_Chip_Pool,ArimaaId.Black_Chip_Pool};
	class StateStack extends OStack<ArimaaState>
	{
		public ArimaaState[] newComponentArray(int n) { return(new ArimaaState[n]); }
	}
    public enum ArimaaState implements BoardState
    {	PUZZLE_STATE(PuzzleStateDescription),
    	RESIGN_STATE(ResignStateDescription),
    	GAMEOVER_STATE(GameOverStateDescription),
    	CONFIRM_STATE(ConfirmStateDescription),
    	DRAW_STATE(DrawStateDescription),
    	PLAY_STATE(MoveStep),
	    INITIAL_SETUP_STATE(PlaceState),
	    PUSH_STATE(PushStep),
	    PULL_STATE(PullStep),
	    ILLEGAL_MOVE_STATE(IllegalRepetitionStateDescription),
	    PUSHPULL_STATE(CompleteState);
    	String description;
    	ArimaaState(String des) { description = des; }
    	public String getDescription() { return(description); }
    	public boolean GameOver() { return(this==GAMEOVER_STATE); }
    	public boolean Puzzle() { return(this==PUZZLE_STATE); } 
		public boolean simultaneousTurnsAllowed() { return false; }
    }
    
	
    static final int MOVE_PICK = 204; // pick a chip from a pool
    static final int MOVE_DROP = 205; // drop a chip
    static final int MOVE_PICKB = 206; // pick from the board
    static final int MOVE_DROPB = 207; // drop on the board
    static final int MOVE_RACK_BOARD = 209;	// move from rack to board
    static final int MOVE_BOARD_BOARD = 210;	// move board to board
    static final int MOVE_PUSH = 211;			// push something
    static final int MOVE_PULL = 212;			// pull something
    static final int MOVE_FINISH_PULL = 213;	// finish a pull move, same as MOVE_BOARD_BOARD except for the context
    static final int MOVE_FINISH_PUSH = 214;	// finish a push move
    static final int MOVE_PLACE_RABBITS = 215;	// add the remaining rabbits
	
    static final String Arimaa_SGF = "Arimaa"; // sgf game number allocated for hex
    static final String[] ARIMAAGRIDSTYLE = { "2", null, "A" }; // left and bottom numbers

 
    // file names for jpeg images and masks
    static final String ImageDir = "/arimaa/images/";
	// sounds
    static final int BACKGROUND_TILE_INDEX = 0;
    static final int BACKGROUND_REVIEW_INDEX = 1;
    static final String TextureNames[] = 
    	{ "background-tile" ,
    	  "background-review-tile"};

}