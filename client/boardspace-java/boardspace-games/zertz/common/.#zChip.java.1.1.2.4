package zertz.common;

import java.awt.Image;
import lib.Random;

import online.common.exCanvas;
import online.game.*;
public class zChip extends chip {
	int chipNumber;
	static public zChip getChip(int i) { return(CANONICAL_PIECE[i]); } 
	
	private zChip(int ix,String na,Image im,long rv,double []sc)
	{
		chipNumber = ix;
		file = na;
		image = im;
		randomv = rv;
		scale = sc;
		
	}
    static final double SCALES[][] = 
    {{0.595505,0.5122,2.507}	// white
    ,{0.61235,0.494382,2.34269}	// gray
    ,{0.5714,0.48739,2.44}	// black
    ,{0.556,0.491,1.6690}	// ring

    };
    static final String[] ImageNames = 
    {   "white-ball"
    	,"gray-ball"
    	,"black-ball"
       	,"ring"
    	
    };
    static zChip[] CANONICAL_PIECE=null;
    // indexes into the balls array, usually called the rack
    static final int WHITE_INDEX = 0; //index for white balls
    static final int GREY_INDEX = 1; //index for grey balls
    static final int BLACK_INDEX = 2; //index for black balls
    static final int RING_INDEX = 3;
    static final int UNDECIDED_INDEX = 3; //index for undecided balls (not in use yet)
    
	// call from the viewer's preloadImages
	public static void preloadImages(exCanvas forcan,String ImageDir)
	{	if(CANONICAL_PIECE==null)
		{
		int nColors = ImageNames.length;
        Image IM[]=forcan.load_masked_images(ImageDir,ImageNames);
        zChip CC[] = new zChip[nColors];
        Random rv = new Random(343535);		// an arbitrary number, just change it
        for(int i=0;i<nColors;i++) 
        	{
        	CC[i]=new zChip(i,ImageNames[i],IM[i],rv.nextLong(),SCALES[i]); 
        	}
        CANONICAL_PIECE = CC;
        check_digests(CC);
		}
	}

}
