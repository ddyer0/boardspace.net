package dipole;
import java.awt.Image;
import lib.Random;

import online.game.*;
import online.common.*;

public class DipoleChip extends chip implements DipoleConstants 
{	static final int FIRST_TILE_INDEX = 0;
	static final int FIRST_CHIP_INDEX = 2;

	public int playerIndex;
	public int chipNumber;
	public DipoleCell location=null;
	
     
	private DipoleChip(int pla,int idx,String fl,Image im,double []sc,long rv)
	{	playerIndex=pla;
		chipNumber=idx;
		image = im;
		scale = sc;
		file = fl;
		randomv = rv;
	}
	/* image initialization and drawing */
	
	static DipoleChip[]CANONICAL_PIECE = null;
    static public DipoleChip getChip(int n) { return(CANONICAL_PIECE[FIRST_CHIP_INDEX+n]); }
    static public DipoleChip getTile(int n) { return(CANONICAL_PIECE[FIRST_TILE_INDEX+n]); }
    static final String[] ImageFileNames = 
    {
	"light-tile","dark-tile",
  	"white-chip-np","black-chip-np"
    };
    static final double[][] SCALES = 
    {
     {0.6,0.5,0.98},	// light square
   	 {0.6,0.5,0.98},	// dark square
   	 {0.532,0.465,1.38},// white chip
   	 {0.526,0.465,1.38}	// dark chip
    };

	// call from the viewer's preloadImages
	public static void preloadImages(exCanvas forcan,String Dir)
	{	if(CANONICAL_PIECE==null)
		{
        Image IM[]=forcan.load_masked_images(Dir,ImageFileNames);
        Random r = new Random(83483356);
        int nchips = ImageFileNames.length;
        DipoleChip CC[] = new DipoleChip[nchips];
        for(int i=0;i<nchips;i++) 
        	{CC[i]=new DipoleChip(i%2,i,ImageFileNames[i],IM[i],SCALES[i],r.nextLong()); }
        CANONICAL_PIECE = CC;
        check_digests(CC);
		}
	}

}
