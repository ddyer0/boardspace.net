package tzaar;

import java.awt.Image;
import lib.Random;
import online.game.chip;
import online.game.commonCanvas;

/*
 * generic "playing piece class, provides canonical playing pieces, 
 * image artwork, scales, and digests.  For our purposes, the squares
 * on the board are pieces too, so there are four of them.
 * 
 */
public class TzaarChip extends chip
{	
	public int drawingIndex;		// index for drawing
	public int typeIndex;			// index for piece type
	public int playerIndex;			// index for owning player
	public int typeMask = 0;		// bitmask so we can check win conditions quickly
	static final int TOTT_TYPE_MASK = 1;
	static final int TZAAR_TYPE_MASK = 2;
	static final int TZARRA_TYPE_MASK = 4;
	static final int ALLTYPES_MASK = TOTT_TYPE_MASK|TZAAR_TYPE_MASK|TZARRA_TYPE_MASK;
    static final int FIRST_CHIP_INDEX = 0;
    static final int WHITE_CHIP_INDEX = FIRST_CHIP_INDEX;
    static final int BLACK_CHIP_INDEX = WHITE_CHIP_INDEX+3;
    static final int[] TYPEMASKS = { TOTT_TYPE_MASK,TZAAR_TYPE_MASK,TZARRA_TYPE_MASK};
 	public int pieceNumber() { return(drawingIndex); }
	static final int W_TOTT_INDEX = 0;
	static final int W_TZARRA_INDEX = 1;
	static final int W_TZAAR_INDEX = 2;
	static final int B_TOTT_INDEX = 3;
	static final int B_TZARRA_INDEX = 4;
	static final int B_TZAAR_INDEX = 5;

	static final int Initial_Count[] = {15,9,6};
	static final int NTYPES = Initial_Count.length;
	
 
	private TzaarChip(int pla,String na,Image im,double sc[],long rv)
	{	drawingIndex=pla;
	 	typeIndex = pla%NTYPES;
	 	playerIndex = pla/NTYPES;
	 	typeMask = TYPEMASKS[typeIndex];
	 	image=im;
	 	scale = sc;
	 	randomv = rv;
	}
		
    private static TzaarChip CANONICAL_PIECE[] = null;	// created by preload_images
    
    private static double SCALES[][] =
    {	{0.473,0.47,1.2},
    	{0.473,0.47,1.2},
    	{0.473,0.47,1.2},
    	{0.473,0.47,1.2},
    	{0.473,0.47,1.2},
    	{0.473,0.47,1.2}
            };
	
	public static TzaarChip getChip(int color)
	{	return(CANONICAL_PIECE[color]);
	}
	public static TzaarChip getChip(int type,int player)
	{	return(CANONICAL_PIECE[type+player*3]);
	}

   static final String[] ImageFileNames = 
       {"white-tott","white-tzarra","white-tzaar",
	   "black-tott","black-tzarra","black-tzaar"};
 
	// call from the viewer's preloadImages
	public static void preloadImages(commonCanvas forcan,String ImageDir)
	{	if(CANONICAL_PIECE==null)
		{
		int nColors = ImageFileNames.length;
		Random r = new Random(6399563);
        Image IM[]=forcan.load_masked_images(ImageDir,ImageFileNames);
        TzaarChip CC[] = new TzaarChip[nColors];
        for(int i=0;i<nColors;i++)
        	{ CC[i] = new TzaarChip(i,ImageFileNames[i],IM[i],SCALES[i],r.nextLong());;
        	}
        CANONICAL_PIECE = CC;
        check_digests(CC);
		}
	}


}
